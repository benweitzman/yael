-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/benwetizman/yael#readme</a>
@package yael-postgres
@version 0.1.0.0

module Yael.Eff.Postgres
newtype Postgres m
Postgres :: (forall a. (Connection -> m a) -> m a) -> Postgres m
[_withSqlConn] :: Postgres m -> forall a. (Connection -> m a) -> m a
withSqlConn :: HasEff Postgres f m => (Connection -> EffT f m a) -> EffT f m a
connSql :: Connection -> Postgres m
poolSql :: MonadBaseControl IO m => Pool Connection -> Postgres m
data Sql (m :: * -> *)
Sql :: (forall q r. (ToRow q, FromRow r) => Query -> q -> m [r]) -> (forall r. FromRow r => Query -> m [r]) -> (forall q. ToRow q => Query -> q -> m Int64) -> (Query -> m Int64) -> Sql
[_query] :: Sql -> forall q r. (ToRow q, FromRow r) => Query -> q -> m [r]
[_query_] :: Sql -> forall r. FromRow r => Query -> m [r]
[_execute] :: Sql -> forall q. ToRow q => Query -> q -> m Int64
[_execute_] :: Sql -> Query -> m Int64
query :: (ToRow q, FromRow r) => Query -> q -> [r] :+ '[Sql]
query_ :: FromRow r => Query -> [r] :+ '[Sql]
execute :: ToRow q => Query -> q -> Int64 :+ '[Sql]
execute_ :: Query -> Int64 :+ '[Sql]
postgresSql :: MonadIO m => Postgres m -> Sql m

module Yael.Eff.Persistent
newtype Persistent m
Persistent :: (forall a. SqlPersistT m a -> m a) -> Persistent m
[_runPersistent] :: Persistent m -> forall a. SqlPersistT m a -> m a
runPersistent :: HasEff Persistent f m => SqlPersistT (EffT f m) a -> EffT f m a
poolPersistent :: MonadUnliftIO m => Pool SqlBackend -> Persistent m
connPersistent :: MonadUnliftIO m => SqlBackend -> Persistent m
postgresPersistent :: (MonadUnliftIO m, MonadLoggerIO m) => Postgres m -> Persistent m
